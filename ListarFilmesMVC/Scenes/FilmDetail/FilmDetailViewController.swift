//
//  FilmDetailViewController.swift
//  ListarFilmesVIP
//
//  Created by William Moreira on 02/05/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit

protocol FilmDetailDisplayLogic where Self: UIViewController {
    
    func displayViewModel(_ viewModel: FilmDetailModel.ViewModel)
}

final class FilmDetailViewController: UIViewController {
    
    private let mainView: FilmDetailView
    private var interactor: FilmDetailInteractable!
    private var router: FilmDetailRouting!
    
    var film: Result?
    
    init(mainView: FilmDetailView, dataSource: FilmDetailModel.DataSource) {
        self.mainView = mainView
        
        super.init(nibName: nil, bundle: nil)
        interactor = FilmDetailInteractor(viewController: self, dataSource: dataSource)
        router = FilmDetailRouter(viewController: self)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        mainView.backgroundColor = .white
        //interactor.doSomething(item: 22)
    }
    
    override func loadView() {
        view = mainView
    }
    
    @available(*, unavailable)
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented, You should't initialize the ViewController through Storyboards")
    }
}


// MARK: - FilmDetailDisplayLogic
extension FilmDetailViewController: FilmDetailDisplayLogic {
    
    func displayViewModel(_ viewModel: FilmDetailModel.ViewModel) {
        DispatchQueue.main.async {
            switch viewModel {
                
            case .doSomething(let viewModel):
                self.displayDoSomething(viewModel)
            }
        }
    }
}


// MARK: - FilmDetailViewDelegate
extension FilmDetailViewController: FilmDetailViewDelegate {
    
    func sendDataBackToParent(_ data: Data) {
        //usually this delegate takes care of users actions and requests through UI
        
        //do something with the data or message send back from mainView
    }
}


// MARK: - Private Zone
private extension FilmDetailViewController {
    
    func displayDoSomething(_ viewModel: NSObject) {
        print("Use the mainView to present the viewModel")
        //example of using router
        router.routeTo(.xScene(xData: 22))
    }
}
