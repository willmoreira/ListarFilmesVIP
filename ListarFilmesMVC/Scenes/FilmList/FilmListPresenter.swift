//
//  FilmListPresenter.swift
//  ListarFilmesVIP
//
//  Created by William Moreira on 02/05/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import Foundation

protocol FilmListPresentationLogic {
    func configureList(_ response: FilmListModel.FilmList.Response)
}

final class FilmListPresenter {
    private weak var viewController: FilmListDisplayLogic?
    
    init(viewController: FilmListDisplayLogic?) {
        self.viewController = viewController
    }
    
    func formatReleaseDate(films: FilmModel) -> FilmModel {
        let newResults = films.results.map { movie -> Result in
            let dateFormatter = DateFormatter()
            dateFormatter.locale = Locale(identifier: "pt_BR")
            dateFormatter.dateFormat = "yyyy-MM-dd"
            if let date = dateFormatter.date(from: movie.releaseDate) {
                dateFormatter.dateFormat = "dd 'de' MMMM 'de' yyyy"
                let newLaunchDate = dateFormatter.string(from: date)
                return Result(adult: movie.adult, backdropPath: movie.backdropPath, genreIDS: movie.genreIDS, id: movie.id, originalLanguage: movie.originalLanguage, originalTitle: movie.originalTitle, overview: movie.overview, popularity: movie.popularity, posterPath: movie.posterPath, releaseDate: newLaunchDate, title: movie.title, video: movie.video, voteAverage: movie.voteAverage, voteCount: movie.voteCount)
            } else {
                return movie
            }
        }

        let newFilms = FilmModel(page: films.page, results: newResults, totalPages: films.totalPages, totalResults: films.totalResults)

        return newFilms
    }
}

// MARK: - FilmListPresentationLogic
extension FilmListPresenter: FilmListPresentationLogic {
    func configureList(_ response: FilmListModel.FilmList.Response) {
        let correctList = formatReleaseDate(films: response.list)
        let viewModel = FilmListModel.FormattedFilmList.ViewModel(list: correctList)
        viewController?.displayConfigureList(viewModel)
    }
}

// MARK: - Private Zone
private extension FilmListPresenter {
 
}
