//
//  FilmListPresenter.swift
//  ListarFilmesVIP
//
//  Created by William Moreira on 02/05/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import Foundation

protocol FilmListPresentationLogic {
    func presentResponse(_ response: FilmListModel.Response)
    func setupMainView(_ response: FilmListModel.FilmList.Response)
    func goToDetailList(_ response: FilmListModel.FilmListResult.Response)
}

final class FilmListPresenter {
    private weak var viewController: FilmListDisplayLogic?
    
    init(viewController: FilmListDisplayLogic?) {
        self.viewController = viewController
    }
}


// MARK: - FilmListPresentationLogic
extension FilmListPresenter: FilmListPresentationLogic {
    func goToDetailList(_ response: FilmListModel.FilmListResult.Response) {
        let viewModel = FilmListModel.FilmListResult.ViewModel(result: response.result)
        viewController?.displayGoToDetailList(viewModel)
    }
    
    func setupMainView(_ response: FilmListModel.FilmList.Response) {
        let viewModel = FilmListModel.FilmList.ViewModel(list: response.list)
        viewController?.displaySetupMainView(viewModel)
    }
  
    func presentResponse(_ response: FilmListModel.Response) {
        
        switch response {
        case .doSomething(let newItem, let isItem):
            presentDoSomething(newItem, isItem)
        }
    }
}


// MARK: - Private Zone
private extension FilmListPresenter {
    
    func presentDoSomething(_ newItem: Int, _ isItem: Bool) {
        
        //prepare data for display and send it further
        
        viewController?.displayViewModel(.doSomething(viewModelData: NSObject()))
    }
}
