//
//  LoginViewController.swift
//  ListarFilmesVIP
//
//  Created by William Moreira on 02/05/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic where Self: UIViewController {
    func displayShowAlert(_ viewModel: LoginModel.Login.ViewModel)
    func displayGoToFilmList(_ viewModel: LoginModel.Login.ViewModel) 
    func displayStartLoading(_ viewModel: LoginModel.Login.ViewModel)
    func displayStopLoading(_ viewModel: LoginModel.Login.ViewModel)
    func displayCleanFields(_ viewModel: LoginModel.Login.ViewModel)
}

final class LoginViewController: BaseUIViewController {
    
    var mainView: LoginView
    var interactor: LoginInteractable!
    var router: (LoginRouting & LoginDataPassing)!
    
    init(mainView: LoginView, dataSource: LoginModel.DataSource) {
        self.mainView = mainView
        super.init(nibName: nil, bundle: nil)
        interactor = LoginInteractor(viewController: self, dataSource: dataSource)
        router = LoginRouter(viewController: self)
        router.dataStore = interactor
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        mainView.backgroundColor = .white
        navigationItem.backBarButtonItem = UIBarButtonItem(title: "Voltar", style: .plain, target: nil, action: nil)
        mainView.delegate = self
    }
    
    override func loadView() {
        view = mainView
    }
    
    @objc func dismissKeyboard() {
        if mainView.inputLogin.isFirstResponder || mainView.inputSenha.isFirstResponder {
            view.endEditing(true)
        }
    }
}

// MARK: - LoginDisplayLogic
extension LoginViewController: LoginDisplayLogic {
    func displayCleanFields(_ viewModel: LoginModel.Login.ViewModel) {
        clearFields()
    }
    
    func displayGoToFilmList(_ viewModel: LoginModel.Login.ViewModel) {
        let route = LoginModel.Login.Route()
        let request = LoginModel.Login.Request()
        interactor.cleanFields(request)
        router.routeToListfilms(route)
    }
    
    func displayStartLoading(_ viewModel: LoginModel.Login.ViewModel) {
        mainView.startAnimating()
    }
    
    func displayStopLoading(_ viewModel: LoginModel.Login.ViewModel) {
        mainView.stopAnimating()
    }
    
    func displayShowAlert(_ viewModel: LoginModel.Login.ViewModel) {
        if let title = viewModel.titleMessage, let message = viewModel.message {
            mainView.showAlert(title: title, message: message)
        }
    }
}

// MARK: - LoginViewDelegate
extension LoginViewController: LoginViewDelegate {
    func loginButtonPressed() {
        let request = LoginModel.Login.Request(password: mainView.inputSenha.text ,login: mainView.inputLogin.text)
        interactor.doLogin(request)
    }
    
    func resetButtonPressed() {
        let route = LoginModel.Login.Route()
        router.routeToResetLogin(route)
    }
    
    func createButtonPressed() {
        let route = LoginModel.Login.Route()
        router.routeToCreateLogin(route)
    }
    
    func clearFields() {
        DispatchQueue.main.async {
            self.mainView.inputLogin.becomeFirstResponder()
            self.mainView.inputLogin.text = ""
            self.mainView.inputSenha.text = ""
        }
    }
}
